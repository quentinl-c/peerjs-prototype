<!DOCTYPE html>
<html lang="en">
  <%- include('header') -%>
  <body>

    <div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
           <nav class="navbar navbar-default" role="navigation">
                <div class="navbar-header">
                     
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                         <span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span>
                    </button> <a class="navbar-brand" href="/">PeerJS prototype</a>
                </div>
                
                <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                    <ul class="nav navbar-nav">
                        <li>
                            <a href="/new-room">New room</a>
                        </li>
                        <li>
                            <a href="#">Link</a>
                        </li>
                    </ul>
                    <form class="navbar-form navbar-left" role="search">
                        <div class="form-group">
                            <input type="text" class="form-control">
                        </div> 
                        <button type="submit" class="btn btn-default">
                            Submit
                        </button>
                    </form>
                </div>
                
            </nav>
            <div class="row">
                <div class="col-md-12">
                    <div class="alert alert-success" role="alert" id="ok" style="display:none">Connection établie avec : <span id="neighbour_id"></span></div>
                    <h2> Vroum ID : <span id="roomID">Demo</span></h2>
                    <h2>Client Id : <span id="client-id"></span></h2>

                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                   
                        <h2>Data received : </h2>
                        <ul class="list-group" id="data">
                        </ul>
                </div>

                    <div class="col-md-6">
                    <h2>Colaborators : </h2>
                        <ul class="list-group" id="collaborators">
                        </ul>
                     </div>
                </div>
            
        </div>
    </div>
</div>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/assets/js/jquery.min.js"></script>
    <script src="/assets/js/bootstrap.min.js"></script>
    <script src="/assets/js/scripts.js"></script>
    <script src="http://cdn.peerjs.com/0.3/peer.min.js"></script>
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script type="text/javascript">
        var socket = io.connect('http://localhost:3000/');
        var conn = [];
        var remoteId;
        var peerId;
        var peerIds;
        var count = 0;

        console.log("Création de l'objet Peer");
        var peer = new Peer({key: 'lwjd5qra8257b9', debug : true});
        
        peer.on('open', function(id) {
             var initPeer = {
                roomId : 1,
                peerId : id
            };
            socket.emit('new_peer', initPeer);
            console.log('My peer ID is : ' + id);
            $('#client-id').append(id);
            peerId = id;
        });

        peer.on('connection', connect);

        function connect (connection){
            conn.push(connection);
            connection.on('data', function(data){
                console.log("Receiving data");
                console.log(data);
                $("#data").append('<li class="list-group-item">' + data + '</li>');
            });
        }

        socket.on('infoPeerIds', function(infoPeerIds){
            peerIds = infoPeerIds;
            console.log(infoPeerIds);
            for (var i = 0; i < peerIds.length; i++) {
                console.log(">>>> Ajout d'une nouvelle connection : ");
                var remoteIds = peerIds[i];
                yolo(remoteIds);
            };
        });

        function yolo (remoteIds){
            var connection = peer.connect(remoteIds);
                connection.on('open', function() {
                    console.log('connectio' ,connection)
                    console.log('remoteIds : ' , remoteIds);
                    $("#ok").show();
                    $("#neighbour_id").append(remoteIds);
                    connect(connection);
                });
        }

        setInterval(function(){
            console.log('conn : ' , conn );
            for(var i = 0; i < conn.length; i++){
                var message = count +" "+ peerId;
                conn[i].send(message);
            }
            count ++;
        }, 1000);

        $('#myform').submit(function(event){
            remoteId = $('#remoteId').val();
            var connection = peer.connect(remoteId);
            connection.on('open', function() {
                $("#ok").show();
                $("#neighbour_id").append(remoteId);
                connect(connection);
            });
            event.preventDefault();
        });
    </script>
  </body>
</html>